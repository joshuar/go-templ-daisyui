// Copyright 2024 Joshua Rich <joshua.rich@gmail.com>.
// SPDX-License-Identifier: 	AGPL-3.0-or-later

package components

func (c Card) setLayout() string {
	switch c.layout {
	case CardLayoutCompact:
		return "card-compact"
	case CardLayoutSide:
		return "card-side"
	default:
		return "card-normal"
	}
}

// Show will render the Card component.
templ (c Card) Show() {
	<div
		class={ "card",
		templ.KV("card-bordered",c.border),
		templ.KV("glass",c.UseGlass()),
		templ.KV("image-full",c.fullImage),
		templ.KV(c.setLayout(),c.layout > 0),
		templ.KV(c.setShadow(),c.shadowSize > 0),
		c.setBaseColor() }
		{ c.Attributes()... }
	>
		@c.showBody()
	</div>
}

templ (c Card) showBody() {
	@c.showImage()
	<div
		class={ "card-body",
	templ.KV("items-center text-center", c.centered) }
	>
		if len(c.TopRightActions) >0 {
			@showActions("justify-end", c.TopRightActions...)
		}
		if c.title != nil {
			@c.title.show()
		}
		if c.body != nil {
			@c.body
		}
		if len(c.BottomRightActions) >0 {
			@showActions("justify-end", c.BottomRightActions...)
		}
		if c.Badges != nil {
			<div class="card-actions justify-end">
				for _, badge := range c.Badges {
					@badge.Show()
				}
			</div>
		}
	</div>
}

// showImage will render the card image, if available.
templ (c Card) showImage() {
	if c.Image != nil {
		<figure
			if c.centered {
				class="px-10 pt-10"
			}
		>
			@c.Image.Show()
		</figure>
	}
}

// show will render the card title.
templ (t cardTitle) show() {
	switch t.size {
		case H1:
			<h1 class="card-title">
				{ t.text }
				if len(t.badges) > 0 {
					@t.showBadges()
				}
			</h1>
		case H2:
			<h2 class="card-title text-wrap">
				{ t.text }
				if len(t.badges) > 0 {
					@t.showBadges()
				}
			</h2>
		case H3:
			<h3 class="card-title">
				{ t.text }
				if len(t.badges) > 0 {
					@t.showBadges()
				}
			</h3>
		case H4:
			<h4 class="card-title">
				{ t.text }
				if len(t.badges) > 0 {
					@t.showBadges()
				}
			</h4>
		case H5:
			<h5 class="card-title">
				{ t.text }
				if len(t.badges) > 0 {
					@t.showBadges()
				}
			</h5>
		case H6:
			<h6 class="card-title">
				{ t.text }
				if len(t.badges) > 0 {
					@t.showBadges()
				}
			</h6>
	}
}

// showBadges will display a list of title badges.
templ (t cardTitle) showBadges() {
	for _, badge := range t.badges {
		@badge.Show()
	}
}

templ showActions(align string, actions ...templ.Component) {
	<div class={ "card-actions", align }>
		for _, action := range actions {
			@action
		}
	</div>
}
