// Copyright 2025 Joshua Rich <joshua.rich@gmail.com>.
// SPDX-License-Identifier: 	AGPL-3.0-or-later


package modal

import (
	"github.com/joshuar/go-templ-daisyui/actions/button"
	"github.com/sebasvil20/templicons/i"
	"github.com/sebasvil20/templicons/tabler"
	"slices"
)

// Show will display a Modal with its properties.
templ (modal *Props) Show() {
	<dialog
		class={ "modal", modal.classes.Show() }
		_="init add @open to me end"
		{ modal.ShowAttributes()... }
	>
		<div class="modal-box">
			// If closeButton option is set, generate a close button.
			if modal.closeButton {
				@modal.showCloseButton()
			}
			// Display the modal content.
			{ children... }
			// Display any action buttons.
			if len(modal.actions) > 0 {
				<form method="dialog">
					<div class="modal-action">
						for action := range slices.Values(modal.actions) {
							@action.Show()
						}
					</div>
				</form>
			}
		</div>
		// If closeOutside option is set, generate backdrop with close action.
		if modal.closeOutside {
			<div class="modal-backdrop" _={ "on click or keyup[key=='Esc'] remove @open from " + modal.GetID() + " then remove " + modal.GetID() }></div>
		}
	</dialog>
}

templ (modal *Props) showCloseButton() {
	<form method="dialog">
		@button.Build(
			button.AsShape(button.Circle),
			button.WithContent(tabler.X(i.Props{Size: i.SizeXS})),
			button.WithSize(button.SM),
			button.WithExtraAttributes(templ.Attributes{
				"_": "on click or keyup[key=='Esc'] remove @open from " + modal.GetID() + " then remove " + modal.GetID(),
			}),
			button.WithExtraClasses("absolute", "right-2", "top-2"),
		).Show()
	</form>
}
