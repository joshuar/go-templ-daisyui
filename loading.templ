// Copyright 2024 Joshua Rich <joshua.rich@gmail.com>.
// SPDX-License-Identifier: MIT

package components

// sizeModifier returns the size modifier of the Loading component.
func (l LoadingProps) sizeModifier() string {
	switch l.size {
	case XS:
		return "loading-xs"
	case SM:
		return "loading-sm"
	case MD:
		return "loading-md"
	case LG:
		return "loading-lg"
	case XL:
		return "loading-xl"
	default:
		return "loading-md"
	}
}

// colorModifier returns the color modifier of the Loading component.
func (l LoadingProps) colorModifier() string {
	color := "loading-neutral"

	switch l.color {
	case ColorPrimary:
		color = "loading-primary"
	case ColorSecondary:
		color = "loading-secondary"
	case ColorAccent:
		color = "loading-accent"
	case ColorNeutral:
		color = "loading-neutral"
	case ColorGhost:
		color = "loading-ghost"
	}

	return color
}

// styleModifier returns the style of the Loading component.
func (l LoadingProps) setStyle() string {
	switch l.style {
	case LoadingBall:
		return "loading-ball"
	case LoadingBars:
		return "loading-bars"
	case LoadingDots:
		return "loading-dots"
	case LoadingInfinity:
		return "loading-infinity"
	case LoadingRing:
		return "loading-ring"
	case LoadingSpinner:
		return "loading-spinner"
	default:
		return "loading-spinner"
	}
}

// Loading is a DaisyUI Loading component.
//
// https://daisyui.com/components/loading/
templ Loading(style LoadingStyle, options ...Option[LoadingProps]) {
	{{ loading := BuildLoading(style, options...) }}
	<span
		if loading.id != "" {
			id={ loading.ID() }
		}
		class={ "loading",
		loading.setStyle(),
		templ.KV("htmx-indicator",loading.htmxIndicator),
	templ.KV(loading.sizeModifier(),loading.SizeIsSet()),
	templ.KV(loading.colorModifier(),loading.ColorIsSet()) }
		{ loading.Attributes()... }
	></span>
}
