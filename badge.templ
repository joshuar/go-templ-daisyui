// Copyright 2024 Joshua Rich <joshua.rich@gmail.com>.
// SPDX-License-Identifier: 	AGPL-3.0-or-later

package components

// setSize sets the size modifier of the Badge.
func (b Badge) setSize() string {
	switch b.size {
	case XS:
		return "badge-xs"
	case SM:
		return "badge-sm"
	case MD:
		return "badge-md"
	case LG:
		return "badge-lg"
	case XL:
		return "badge-xl"
	default:
		return "badge-md"
	}
}

// setState sets a state modifier of the Badge.
func (b Badge) setState() string {
	var state string

	switch b.state {
	case StateInfo:
		state = "badge-info"
	case StateSuccess:
		state = "badge-success"
	case StateWarning:
		state = "badge-warning"
	case StateError:
		state = "badge-error"
	}

	if b.stateOutline {
		state = state + " badge-outline"
	}

	return state
}

// setColor sets a color modifier of the badge.
func (b Badge) setColor() string {
	color := "badge-neutral"

	switch b.color {
	case ColorPrimary:
		color = "badge-primary"
	case ColorSecondary:
		color = "badge-secondary"
	case ColorAccent:
		color = "badge-accent"
	case ColorNeutral:
		color = "badge-neutral"
	case ColorGhost:
		color = "badge-ghost"
	}

	// Neutral and Ghost colors don't have an outline variant.
	if b.colorOutline && (b.color != ColorNeutral || b.color != ColorGhost) {
		color = color + " badge-outline"
	}

	return color
}

// Show will render the Badge component.
templ (b Badge) Show() {
	<span
		class={ "badge",
	templ.KV(b.setSize(),b.size > 0),
	templ.KV(b.setState(),b.state > 0),
	templ.KV(b.setColor(),b.color > 0) }
	>
		if b.desc != "" {
			{ b.desc }
		}
	</span>
}
