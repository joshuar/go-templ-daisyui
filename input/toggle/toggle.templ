// Copyright 2025 Joshua Rich <joshua.rich@gmail.com>.
// SPDX-License-Identifier: 	AGPL-3.0-or-later

package toggle

import "github.com/joshuar/go-templ-daisyui/modifiers/size"
import "github.com/joshuar/go-templ-daisyui/modifiers/color"
import "github.com/joshuar/go-templ-daisyui/modifiers/state"

func (toggle *Props) applySize() string {
	switch toggle.size {
	case size.XS:
		return "toggle-xs"
	case size.SM:
		return "toggle-sm"
	case size.MD:
		return "toggle-md"
	case size.LG:
		return "toggle-lg"
	case size.XL:
		return "toggle-xl"
	default:
		return "toggle-md"
	}
}

// applyThemeColor applies a theme color to the Component.
func (toggle *Props) applyThemeColor() string {
	themeColor := "toggle-neutral"

	switch toggle.GetThemeColor() {
	case color.Primary:
		themeColor = "toggle-primary"
	case color.Secondary:
		themeColor = "toggle-secondary"
	case color.Accent:
		themeColor = "toggle-accent"
	case color.Neutral:
		themeColor = "toggle-neutral"
	case color.Ghost:
		themeColor = "toggle-ghost"
	}

	return themeColor
}

// applyStateColor applies a state color to the Component.
func (toggle *Props) applyStateColor() string {
	var stateColor string

	switch toggle.GetStateColor() {
	case state.Info:
		stateColor = "toggle-info"
	case state.Success:
		stateColor = "toggle-sucess"
	case state.Warning:
		stateColor = "toggle-warning"
	case state.Error:
		stateColor = "toggle-error"
	}

	return stateColor
}

templ (toggle *Props) Show() {
	<toggle
		type="checkbox"
		class={ "toggle",
		templ.KV(toggle.applyThemeColor(), toggle.ValidThemeColor()),
		templ.KV(toggle.applyStateColor(), toggle.ValidStateColor()),
		templ.KV(toggle.applySize(),toggle.size.Valid()) }
		disabled?={ toggle.disabled }
		{ toggle.ShowAttributes()... }
	></toggle>
}
