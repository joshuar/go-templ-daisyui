// Code generated by "stringer -type=ButtonModifier,ButtonShape -linecomment -output button_generated.go"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ButtonNoModifier-0]
	_ = x[ButtonNeutral-1]
	_ = x[ButtonPrimary-2]
	_ = x[ButtonSecondary-3]
	_ = x[ButtonAccent-4]
	_ = x[ButtonInfo-5]
	_ = x[ButtonSuccess-6]
	_ = x[ButtonWarning-7]
	_ = x[ButtonError-8]
	_ = x[ButtonLink-9]
	_ = x[ButtonGhost-10]
}

const _ButtonModifier_name = "btn-neutralbtn-primarybtn-secondarybtn-accentbtn-infobtn-successbtn-warningbtn-errorbtn-linkbtn-ghost"

var _ButtonModifier_index = [...]uint8{0, 0, 11, 22, 35, 45, 53, 64, 75, 84, 92, 101}

func (i ButtonModifier) String() string {
	if i < 0 || i >= ButtonModifier(len(_ButtonModifier_index)-1) {
		return "ButtonModifier(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ButtonModifier_name[_ButtonModifier_index[i]:_ButtonModifier_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ButtonRegular-0]
	_ = x[ButtonSquare-1]
	_ = x[ButtonCircle-2]
}

const _ButtonShape_name = "btn-squarebtn-circle"

var _ButtonShape_index = [...]uint8{0, 0, 10, 20}

func (i ButtonShape) String() string {
	if i < 0 || i >= ButtonShape(len(_ButtonShape_index)-1) {
		return "ButtonShape(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ButtonShape_name[_ButtonShape_index[i]:_ButtonShape_index[i+1]]
}
