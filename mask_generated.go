// Code generated by "stringer -type=Mask -linecomment -output mask_generated.go"; DO NOT EDIT.

package components

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MaskNone-0]
	_ = x[MaskSquircle-1]
	_ = x[MaskHeart-2]
	_ = x[MaskHexagon-3]
	_ = x[MaskHexagonAlt-4]
	_ = x[MaskDecagon-5]
	_ = x[MaskPentagon-6]
	_ = x[MaskDiamond-7]
	_ = x[MaskSquare-8]
	_ = x[MaskCircle-9]
	_ = x[MaskParallelogram-10]
	_ = x[MaskParallelogramAlt1-11]
	_ = x[MaskParallelogramAlt2-12]
	_ = x[MaskParallelogramAlt3-13]
	_ = x[MaskStar-14]
	_ = x[MaskStarAlt-15]
	_ = x[MaskTriangle-16]
	_ = x[MaskTriangleAlt-17]
	_ = x[MaskTriangleAlt2-18]
	_ = x[MaskTriangleAlt3-19]
	_ = x[MaskHalfLeft-20]
	_ = x[MaskHalfRight-21]
}

const _Mask_name = "mask-squirclemask-heartmask-hexagonmask-hexagon-2mask-decagonmask-pentagonmask-diamondmask-squaremask-circlemask-parallelogrammask-parallelogram-2mask-parallelogram-3mask-parallelogram-4mask-starmask-star-2mask-trianglemask-triangle-2mask-triangle-3mask-triangle-4mask-half-1mask-half-2"

var _Mask_index = [...]uint16{0, 0, 13, 23, 35, 49, 61, 74, 86, 97, 108, 126, 146, 166, 186, 195, 206, 219, 234, 249, 264, 275, 286}

func (i Mask) String() string {
	if i < 0 || i >= Mask(len(_Mask_index)-1) {
		return "Mask(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Mask_name[_Mask_index[i]:_Mask_index[i+1]]
}
