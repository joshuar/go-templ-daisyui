// Code generated by "stringer -type=InputType,InputModifier -linecomment -output input_generated.go"; DO NOT EDIT.

package components

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InputTypeText-0]
	_ = x[InputTypePassword-1]
	_ = x[InputTypeSearch-2]
}

const _InputType_name = "textpasswordsearch"

var _InputType_index = [...]uint8{0, 4, 12, 18}

func (i InputType) String() string {
	if i < 0 || i >= InputType(len(_InputType_index)-1) {
		return "InputType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InputType_name[_InputType_index[i]:_InputType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InputNoModifier-0]
	_ = x[InputBordered-1]
	_ = x[InputGhost-2]
	_ = x[InputPrimary-3]
	_ = x[InputSecondary-4]
	_ = x[InputAccent-5]
	_ = x[InputInfo-6]
	_ = x[InputSuccess-7]
	_ = x[InputWarning-8]
	_ = x[InputError-9]
}

const _InputModifier_name = "input-borderedinput-ghostinput-primaryinput-secondaryinput-accentinput-infoinput-successinput-warninginput-error"

var _InputModifier_index = [...]uint8{0, 0, 14, 25, 38, 53, 65, 75, 88, 101, 112}

func (i InputModifier) String() string {
	if i < 0 || i >= InputModifier(len(_InputModifier_index)-1) {
		return "InputModifier(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InputModifier_name[_InputModifier_index[i]:_InputModifier_index[i+1]]
}
