// Copyright 2025 Joshua Rich <joshua.rich@gmail.com>.
// SPDX-License-Identifier: 	AGPL-3.0-or-later

package text

import (
	"context"
	"github.com/joshuar/go-templ-daisyui"
	"io"
)

const (
	Italic Style = "italic"
)

// Text Style.
type Style = components.Class

const (
	Base Size = "text-base"
	XS   Size = "text-xs"
	SM   Size = "text-sm"
	LG   Size = "text-lg"
	XL   Size = "text-xl"
	XLXL Size = "text-xlxl"
)

// Size controls the font size of the text.
//
// https://tailwindcss.com/docs/font-size
type Size = components.Class

const (
	Normal     Weight = "font-normal"
	Thin       Weight = "font-thin"
	Extralight Weight = "font-extralight"
	Light      Weight = "font-light"
	Medium     Weight = "font-medium"
	Semibold   Weight = "font-semibold"
	Bold       Weight = "font-bold"
	Extrabold  Weight = "font-extrabold"
	Black      Weight = "font-black"
)

// Weight controls the font weight of the text.
//
// https://tailwindcss.com/docs/font-weight
type Weight = components.Class

const (
	Primary   Color = "text-primary"
	Secondary Color = "text-secondary"
	Accent    Color = "text-accent"
	Neutral   Color = "text-neutral"
	Info      Color = "text-info"
	Success   Color = "text-success"
	Warning   Color = "text-warning"
	Error     Color = "text-error"
)

// Color controls the text color.
type Color = components.Class

const (
	Truncate Overflow = "truncate"
	Ellipsis Overflow = "text-ellipsis"
	Clip     Overflow = "text-clip"
)

// Overflow controls how the text will overflow.
//
// https://tailwindcss.com/docs/text-overflow
type Overflow = components.Class

templ (text *Props) template() {
	<p class={ text.classes.Show() } { text.attributes.ShowAttributes()... }>
		{ children... }
	</p>
}

func (text *Props) Render(ctx context.Context, w io.Writer) error {
	return text.template().Render(ctx, w)
}
