// Copyright 2025 Joshua Rich <joshua.rich@gmail.com>.
// SPDX-License-Identifier: 	AGPL-3.0-or-later

package card

import (
	"context"
	"github.com/joshuar/go-templ-daisyui"
	"io"
)

const (
	// Border adds a solid border around the card.
	Border Style = "card-border"
	// Dash adds a dashed border around the card.
	Dash Style = "card-dash"
	// FullImage sets any image as the background of the card.
	FullImage Style = "image-full"
)

// Style defines a style class for the card component.
type Style = components.Class

const (
	// LayoutNormal is the default layout. This does not need to be specified.
	LayoutNormal Layout = "card-normal"
	// LayoutCompact uses a more compact layout.
	LayoutCompact Layout = "card-compact"
	// LayoutSide will place any card image at the side.
	LayoutSide Layout = "card-side"
)

// Layout defines the layout of a card component.
type Layout = components.Class

const (
	XS Size = "card-xs"
	SM Size = "card-sm"
	MD Size = "card-md"
	LG Size = "card-lg"
	XL Size = "card-xl"
)

// Size defines the size of a card component.
type Size = components.Class

func (card *Props) Render(ctx context.Context, w io.Writer) error {
	return card.template().Render(ctx, w)
}

// Show will display a Card with the given options.
templ (card *Props) template() {
	<div class={ "card", card.classes.Show() } { card.attributes.ShowAttributes()... }>
		{ children... }
	</div>
}

func (card *BodyProps) Render(ctx context.Context, w io.Writer) error {
	return card.template().Render(ctx, w)
}

templ (body *BodyProps) template() {
	<div class={ "card-body", body.classes.Show() } { body.attributes.ShowAttributes()... }>
		{ children... }
	</div>
}

// Title will display a string with the card title styles applied.
templ Title(title string) {
	<h2 class="card-title">{ title }</h2>
}

// Actions will display the given children wrapped in the card actions style.
templ Actions() {
	<div class="card-actions justify-end">
		{ children... }
	</div>
}
