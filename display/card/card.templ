// Copyright 2025 Joshua Rich <joshua.rich@gmail.com>.
// SPDX-License-Identifier: 	AGPL-3.0-or-later

package card

import (
	"github.com/joshuar/go-templ-daisyui"
	"strings"
)

const (
	// Border adds a solid border around the card.
	Border Style = "card-border"
	// Dash adds a dashed border around the card.
	Dash Style = "card-dash"
	// FullImage sets any image as the background of the card.
	FullImage Style = "image-full"
)

// Style defines a style class for the card component.
type Style = components.Class

const (
	// LayoutNormal is the default layout. This does not need to be specified.
	LayoutNormal Layout = "card-normal"
	// LayoutCompact uses a more compact layout.
	LayoutCompact Layout = "card-compact"
	// LayoutSide will place any card image at the side.
	LayoutSide Layout = "card-side"
)

// Layout defines the layout of a card component.
type Layout = components.Class

const (
	XS Size = "card-xs"
	SM Size = "card-sm"
	MD Size = "card-md"
	LG Size = "card-lg"
	XL Size = "card-xl"
)

// Size defines the size of a card component.
type Size = components.Class

// Show will display a Card with the given options.
templ (card *Props) Show(classes ...string) {
	<div
		class={ "card",
	templ.KV(card.baseColor.String(),card.baseColor.Valid()),
	card.classes.Show(),
	templ.KV(strings.Join(classes, " "),len(classes) >0) }
		{ card.ShowAttributes()... }
	>
		// Show the Card image, if specified.
		if card.image != nil {
			if card.centeredContent {
				<figure class="px-10 pt-10">
					@card.image.Show("rounded-xl")
				</figure>
			}
			<figure>
				@card.image.Show()
			</figure>
		}
		// Show the Card body, if specified.
		if card.body != nil {
			if card.centeredContent {
				@card.body.Show("items-center text-center")
			} else {
				@card.body.Show()
			}
		}
	</div>
}

// Show will display the Card body with the given options.
templ (body *BodyProps) Show(classes ...string) {
	<div
		class={ "card-body",
			body.classes.Show(),
		templ.KV(strings.Join(classes, " "),len(classes) >0) }
		{ body.ShowAttributes()... }
	>
		// Display the Card title, if specified.
		if body.title != nil {
			<h2 class="card-title">
				@body.title
			</h2>
		}
		// Display the Card body content, if specified.
		if body.content != nil {
			@body.content
		}
		// Display any specified Card actions.
		if len(body.actions) >0 {
			<div class="card-actions justify-end">
				for _, action := range body.actions {
					@action
				}
			</div>
		}
	</div>
}
